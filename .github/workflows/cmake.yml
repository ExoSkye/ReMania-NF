name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows-MSVC", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
          - {
            name: "Windows-MinGW", artifact: "Windows-MinGW.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
          - {
            name: "Ubuntu-GCC", artifact: "LinuxGCC.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
          - {
            name: "Ubuntu-Clang", artifact: "Clang.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }
          - {
            name: "macOS-Clang", artifact: "macOS.tar.xz",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }


    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Setup OpenGL
        if: matrix.config.os == "ubuntu-latest"
        uses: openrndr/setup-opengl@v1.1
        

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPLATFORM=${{ matrix.config.name }}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          # Artifact name
          name: EpiSim
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ${{runner.workspace}}/build/${{ matrix.config.name }}
            ${{runner.workspace}}/build/**/${{ matrix.config.name }}.exe

      - name: Rename directory
        working-directory: ${{runner.workspace}}
        shell: bash
        run: "cp -rv build ${{ github.sha }}"

      - name: Upload to IPFS
        # You may pin to the exact commit or the version.
        # uses: aquiladev/ipfs-action@cb917f89640f3d6191713b2419828276940fd4ec
        uses: aquiladev/ipfs-action@v0.1.5
        with:
          # Directory path to upload
          path: "${{runner.workspace}}/${{ github.sha }}"
